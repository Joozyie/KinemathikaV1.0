@model Kinemathika.ViewModels.Teacher.StudentOverviewVm
@using System.Text.Json

@{
    ViewData["IsAuthPage"] = true;
    ViewData["Title"] = "Student Overview";
    Layout = "~/Views/Shared/_TeacherLayout.cshtml";

    Func<string, string> MapConceptName = id => id switch
    {
        "sv" => "Speed & Velocity",
        "dd" => "Distance & Displacement",
        "acc" => "Acceleration",
        _ => id
    };
}

@section PageTitle {
    <div class="fw-bold mb-3">@Model.Name Overviews</div>
}

<!-- KPI Row -->
<div class="row g-3 mb-3">
    <div class="col-12 col-md-4 col-lg-3">
        <div class="kpi-tile kpi-blue">
            <div class="kpi-label">Total Attempts</div>
            <div class="kpi-value">@Model.TotalAttempts</div>
        </div>
    </div>
    <div class="col-12 col-md-4 col-lg-3">
        <div class="kpi-tile kpi-orange">
            <div class="kpi-label">Avg Attempts</div>
            <div class="kpi-value">@Model.AvgAttemptsToCorrect.ToString("0.00")</div>
        </div>
    </div>
    <div class="col-12 col-md-4 col-lg-3">
        <div class="kpi-tile kpi-green">
            <div class="kpi-label">Avg Time to Correct</div>
            <div class="kpi-value">
                @{
                    var ts = TimeSpan.FromSeconds(Model.AvgTimeToCorrectSec);
                }
                @($"{(int)ts.TotalMinutes} min {ts.Seconds} sec")
            </div>
        </div>
    </div>
</div>

<!-- Progress + Concept Insights -->
<div class="card border-0 shadow-sm rounded-4 mb-3">
    <div class="card-body">
        <div class="row g-4">
            <!-- Donut -->
            <div class="col-12 col-xl-4 text-center d-flex flex-column align-items-center">
                <div class="position-relative" style="width:100%; max-width:260px; aspect-ratio:1;">
                    <canvas id="studentDonut"></canvas>
                    <div id="donutCenterText"
                        class="position-absolute top-50 start-50 translate-middle fw-bold text-success text-center"
                        style="font-size:1.4rem; line-height:1.4;">
                    </div>
                </div>
            </div>

            <!-- Concept KPIs + Trend -->
            <div class="col-12 col-xl-8">
                <div class="d-flex justify-content-between align-items-center mb-3">
                    <div class="fw-semibold col-3">Select Concept</div>
                    <select id="conceptSelectInsights" class="form-select form-select-sm" style="min-width:280px;">
                        <option value="all" selected>All Concepts</option>
                        @foreach (var c in Model.Concepts)
                        {
                            <option value="@c">@MapConceptName(c)</option>
                        }
                    </select>
                </div>

                <!-- KPI Tiles -->
                <div class="row g-3 mb-4">
                    <div class="col-12 col-md-6">
                        <div class="kpi-tile kpi-orange text-center">
                            <div class="kpi-label small">Avg Attempts</div>
                            <div class="kpi-value fw-bold fs-4" id="conceptAvgAttempts">0.00</div>
                        </div>
                    </div>
                    <div class="col-12 col-md-6">
                        <div class="kpi-tile kpi-green text-center">
                            <div class="kpi-label small">Avg Time</div>
                            <div class="kpi-value fw-bold fs-4" id="conceptAvgTime">0 min 0 sec</div>
                        </div>
                    </div>
                </div>

                <!-- Trend Chart -->
                <div class="d-flex justify-content-between align-items-center mb-2">
                    <div class="fw-semibold">Trend Over Time</div>
                    <div class="btn-group">
                        <button type="button" class="btn btn-sm btn-primary" id="btnConceptAttempts">Attempts</button>
                        <button type="button" class="btn btn-sm btn-outline-primary" id="btnConceptTime">Time</button>
                    </div>
                </div>
                <div>
                    <canvas id="conceptTrend" style="width:100%; height:350px;"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Recent Attempts Table -->
<div class="card border-0 shadow-sm rounded-4">
    <div class="card-body">
        <div class="fw-bold fs-5 mb-3">Recent Attempts</div>

        <table class="table table-hover table-striped mb-3 mt-3" id="recentAttemptsTable">
            <thead class="table-light">
                <tr>
                    <th>Ended</th>
                    <th>Concept</th>
                    <th>Problem</th>
                    <th>Status</th>
                    <th>First Try</th>
                    <th>Attempts</th>
                    <th>Time (s)</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.RecentAttempts != null && Model.RecentAttempts.Any())
                {
                    foreach (var r in Model.RecentAttempts)
                    {
                        <tr>
                            <td>@r.EndedAt.ToLocalTime()</td>
                            <td>@r.ConceptId</td>
                            <td>@r.ProblemId</td>
                            <td>@r.Status</td>
                            <td>@(r.FirstTry ? "Yes" : "No")</td>
                            <td>@r.Attempts</td>
                            <td>@r.TimeSec</td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="7" class="text-center">No attempts yet.</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<link rel="stylesheet" href="https://cdn.datatables.net/1.10.25/css/jquery.dataTables.min.css">
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.datatables.net/1.10.25/js/jquery.dataTables.min.js"></script>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // ---------- Donut ----------
        (function () {
            const donutCanvas = document.getElementById("studentDonut");
            const centerText = document.getElementById("donutCenterText");
            let donutChart = null;

            function drawDonut(progressPct) {
                centerText.textContent = `Progress\n${Math.round(progressPct)}%`;
                if (donutChart) {
                    donutChart.data.datasets[0].data = [progressPct, 100 - progressPct];
                    donutChart.update();
                } else {
                    donutChart = new Chart(donutCanvas, {
                        type: 'doughnut',
                        data: { datasets: [{ data: [progressPct, 100 - progressPct], backgroundColor: ['#198754', '#e9ecef'], borderWidth: 0 }] },
                        options: { cutout: '72%', responsive: true, maintainAspectRatio: false, plugins: { legend: { display: false }, tooltip: { enabled: false } } }
                    });
                }
            }

            drawDonut(@Math.Round(Model.MasteryRate * 100));
        })();

        // ---------- Concept Insights Trend ----------
        (function () {
            const concepts = @Html.Raw(JsonSerializer.Serialize(Model.Concepts.Select(c => new { Concept = c })));
            let selectedConcept = concepts[0];
            const valAttempts = document.getElementById("conceptAvgAttempts");
            const valTime = document.getElementById("conceptAvgTime");
            const trendCanvas = document.getElementById("conceptTrend");
            let trendChart = null;

            function updateConceptSummary(avgAttempts = 0, avgTimeSec = 0) {
                valAttempts.textContent = avgAttempts.toFixed(2);
                const m = Math.floor(avgTimeSec / 60), s = Math.round(avgTimeSec % 60);
                valTime.textContent = `${m} min ${s} sec`;
            }

            function drawTrend(metric) {
                const conceptId = selectedConcept.Concept;
                fetch(`/api/analytics/student/@Model.StudentId/trend?metric=${metric}&conceptId=${conceptId}`)
                    .then(res => res.json())
                    .then(series => {
                        if (trendChart) trendChart.destroy();
                        trendChart = new Chart(trendCanvas, {
                            type: 'line',
                            data: { labels: series.points.map(p => p.x), datasets: [{ label: metric, data: series.points.map(p => p.y), borderColor: '#198754', backgroundColor: 'rgba(0,0,0,0)', tension: 0.3, pointRadius: 3 }] },
                            options: { responsive: true, maintainAspectRatio: false, plugins: { legend: { display: false } }, scales: { x: { title: { display: true, text: 'Date' } }, y: { title: { display: true, text: metric } } } }
                        });
                    });
            }

            const conceptSel = document.getElementById("conceptSelectInsights");
            conceptSel.addEventListener("change", () => {
                selectedConcept = concepts.find(c => c.Concept === conceptSel.value) || concepts[0];
                fetch(`/api/analytics/student/@Model.StudentId/concept-summary?conceptId=${selectedConcept.Concept}`)
                    .then(res => res.json())
                    .then(d => {
                        updateConceptSummary(d.avgAttempts ?? 0, d.avgTimeSec ?? 0);
                        drawTrend("Attempts");
                    });
            });

            document.getElementById("btnConceptAttempts").addEventListener("click", () => drawTrend("Attempts"));
            document.getElementById("btnConceptTime").addEventListener("click", () => drawTrend("Time"));

            // Initial load
            fetch(`/api/analytics/student/@Model.StudentId/concept-summary?conceptId=all`)
                .then(res => res.json())
                .then(d => {
                    updateConceptSummary(d.avgAttempts ?? 0, d.avgTimeSec ?? 0);
                    drawTrend("Attempts");
                });

            // ---------- DataTables ----------
            $(document).ready(function () {
                $('#recentAttemptsTable').DataTable({ pageLength: 10, lengthMenu: [5, 10, 25], responsive: true });
            });
        })();
    </script>
}
